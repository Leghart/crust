image: "rust:latest"

.docker_job_base: &docker_job_base
  image: docker:20.10.17
  services:
    - name: docker:20.10.17-dind
      alias: docker
  tags:
    - docker
  dependencies: []
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
    COMPOSE_DOCKER_CLI_BUILD: 1
  before_script:
    - mkdir -p $HOME/.docker/
    - docker version
    - docker compose version

stages:
  - pre_check
  - build
  - post_check
  - deploy

test-code:
  <<: *docker_job_base
  stage: pre_check
  script:
    - docker compose -f ci/docker-compose.yml run tests ./app/ci/run_tests.sh
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

lint-code:
  stage: pre_check
  script:
    - rustup component add clippy
    - cargo clippy -- -D warnings
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'    

format-code:
  stage: pre_check
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'    

build_package:
  image: clux/muslrust
  stage: build
  needs:
    - job: test-code
      artifacts: false
    - job: format-code
      artifacts: false
    - job: lint-code
      artifacts: false            
  script:
    - cargo build --release
    - strip ${CI_PROJECT_DIR}/target/x86_64-unknown-linux-musl/release/crust
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/target/x86_64-unknown-linux-musl/release/crust
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'      

test-stripped-binary:
  stage: post_check
  script:
    - ${CI_PROJECT_DIR}/target/x86_64-unknown-linux-musl/release/crust -V
    - if [[ $? -eq 0 ]]; then exit 0; else exit 1; fi
  needs:
    - job: build_package
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/target/x86_64-unknown-linux-musl/release/crust    
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'      